import{p as l}from"./index-B_igWmnV.js";const u=(t,a,r,s)=>({keydown(e){if(e.preventDefault(),!l(e)&&e.key==="Escape"){t.value=r.value,a.value=!1;return}if(!l(e)&&e.key==="Enter"){a.value=!1;return}t.value+=` ${e.key}`},mousedown(e){const o=e.target,n=s.value;o===n||n?.contains(o)||(t.value+=` ${e.button}`,e.preventDefault())},wheel(e){t.value+=` ${e.deltaY>0?"↓":"↑"}`,e.preventDefault()}}),i=(t,a,r,s)=>()=>{a.value||(t.value&&(s?.value?(s.value.push(t.value),r.value=""):r.value=t.value),t.value="")};u.__docgenInfo={exportName:"createRecorderHandler",displayName:"createRecorderHandler",type:2,props:[{name:"value",global:!1,description:"",tags:[],required:!0,type:"string",declarations:[],schema:"string"},{name:"__@RefSymbol@946",global:!1,description:`Type differentiator only.
We need this to be in public d.ts but don't want it to show up in IDE
autocomplete, so we use a private Symbol instead.`,tags:[],required:!0,type:"true",declarations:[],schema:"true"}],events:[],slots:[],exposed:[],sourceFiles:"/home/runner/work/ui/ui/src/runtime/helpers/storybook.ts"};i.__docgenInfo={exportName:"createRecorderWatchEffect",displayName:"createRecorderWatchEffect",type:2,props:[{name:"value",global:!1,description:"",tags:[],required:!0,type:"string",declarations:[],schema:"string"},{name:"__@RefSymbol@946",global:!1,description:`Type differentiator only.
We need this to be in public d.ts but don't want it to show up in IDE
autocomplete, so we use a private Symbol instead.`,tags:[],required:!0,type:"true",declarations:[],schema:"true"}],events:[],slots:[],exposed:[],sourceFiles:"/home/runner/work/ui/ui/src/runtime/helpers/storybook.ts"};export{i as a,u as c};
